---
description: 
globs: 
alwaysApply: false
---
[ActionEntity.kt](mdc:app/src/main/java/io/github/sds100/keymapper/data/entities/ActionEntity.kt) [ActionDataEntityMapper.kt](mdc:app/src/main/java/io/github/sds100/keymapper/actions/ActionDataEntityMapper.kt) [ActionData.kt](mdc:app/src/main/java/io/github/sds100/keymapper/actions/ActionData.kt) [ActionId.kt](mdc:app/src/main/java/io/github/sds100/keymapper/actions/ActionId.kt) [PerformActionsUseCase.kt](mdc:app/src/main/java/io/github/sds100/keymapper/actions/PerformActionsUseCase.kt) [ActionUtils.kt](mdc:app/src/main/java/io/github/sds100/keymapper/actions/ActionUtils.kt) [strings.xml](mdc:app/src/main/res/values/strings.xml) [ActionUiHelper.kt](mdc:app/src/main/java/io/github/sds100/keymapper/actions/ActionUiHelper.kt) [CreateActionDelegate.kt](mdc:app/src/main/java/io/github/sds100/keymapper/actions/CreateActionDelegate.kt)


When you create an action you must follow these steps:

0. Ask me whether the action is editable.
1. Create a new id in ActionId
2. Create a new ActionData
3. Map the data to and from an entity in ActionDataEntityMapper
4. Give the action a category in ActionUtils
5. If the action is editable then add it to the isEditable function in ActionUtils
6. Create a title for the action in strings.xml
7. Give the action a title and icon in ActionUtils. Only create a compose Icon. Ignore the drawable one.
8. Give the action a title in ActionUiHelper
9. Stub out the action in PerformActionsUseCase
10. Handle creating the action in CreateActionDelegate

Important things to remember:

- Do not delete any existing code for other actions.
- Follow the naming of existing code and strings and do not change them.
- Add code near existing code for similar actions.